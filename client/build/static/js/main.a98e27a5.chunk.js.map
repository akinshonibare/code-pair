{"version":3,"sources":["actions/infoAction.js","reducers/infoReducer.js","reducers/index.js","store.js","utils/firebase/index.js","components/LandingPage/LandingPage.js","actions/snippetsAction.js","actions/postFileAction.js","components/CreateRoom/CreateRoom.js","components/RightSection/RightSection.js","components/JoinRoom/JoinRoom.js","components/Editor/Editor.js","actions/runCode.js","components/VideoComponent/VideoComponent.js","components/Dashboard/Dashboard.js","App.js","routes.js","serviceWorker.js","index.js"],"names":["SET_ROOM_DATA","SET_USER_DATA","setRoomData","data","type","payload","initialState","userData","roomData","combineReducers","pageInfo","state","arguments","length","undefined","action","user","Object","objectSpread","room","middleware","thunk","applyMiddleware","apply","toConsumableArray","store","createStore","reducers","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","auth","GITHUB_AUTH_PROVIDER","GithubAuthProvider","LandingPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","axios","get","then","res","setState","result","react_default","a","createElement","className","es_button","style","width","onClick","onLoginClick","Component","postFile","post","InputGroup","input","Group","Option","es_select","CreateRoom","setLanguage","value","language","setRoom","roomName","setModalVisible","setInRoom","handleUploadFile","event","FormData","append","target","files","setCodeFromFile","randomstring","generate","charset","modal","title","visible","modalVisible","onOk","onCancel","addonBefore","defaultValue","disabled","compact","onChange","map","item","i","key","actions","connect","FactCard","JoinRoom","e","getRoom","socket","io","Editor","context","newValue","code","console","log","emit","setTheme","newTheme","theme","updateCodeFromSockets","updateUsersAndCodeInState","sendUsersAndCode","downloadFile","element","document","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","users","on","codeFromFile","_this3","_this$state","Editor_InputGroup","Editor_Option","run","react_ace_lib_default","mode","name","editorProps","$blockScrolling","setOptions","showLineNumbers","tabSize","showPrintMargin","runPythonCode","VideoComponent","joinRoom","trim","connectOptions","previewTracks","tracks","Video","token","roomJoined","error","message","roomNameErr","identity","activeRoom","localMediaAvailable","hasJoinedRoom","previewContainer","refs","localMedia","querySelector","attachParticipantTracks","localParticipant","participants","forEach","participant","remoteMedia","track","kind","attachTracks","detachTracks","detachParticipantTracks","stop","detach","detachedElement","remove","Array","from","values","leaveRoom","disconnect","concat","id","results","_results$data","container","attach","showLocalTrack","ref","joinOrLeaveRoomButton","shape","size","Header","Footer","Sider","Content","Dashboard","toggle","collapsed","onCollapse","createRoomVisible","createroommodal","joinRoomVisible","joinroommodal","Inroom","confirm","onLogoutClick","handleNewUserMessage","newMessage","addResponseMessage","prevProps","prevState","_","isEmpty","layout","minHeight","trigger","collapsible","avatar","src","photo","textAlign","tag","popconfirm","placement","onConfirm","okText","cancelText","position","bottom","left","background","padding","components_VideoComponent_VideoComponent","margin","PanelGroup","components_Editor_Editor","RightSection_RightSection","empty","description","marginBottom","lib","subtitle","components_CreateRoom_CreateRoom","components_JoinRoom_JoinRoom","App","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","authLoading","signInWithPopup","t0","_callee2","_context2","signOut","authObserver","onAuthStateChanged","visitor","providerData","setUserData","history","push","Switch","Route","exact","path","render","components_Dashboard_Dashboard","assign","components_LandingPage_LandingPage","loading","withRouter","pageData","teamData","routes","es6","BrowserRouter","isMobile","height","display","alignItems","justifyContent","color","src_App","Boolean","window","location","hostname","match","react_redux_es","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a98e27a5.chunk.js","sourcesContent":["export const SET_ROOM_DATA = \"SET_ROOM_DATA\";\nexport const SET_USER_DATA = \"SET_USER_DATA\";\n\nexport function setRoomData(data) {\n  return { type: SET_ROOM_DATA, payload: data };\n}\n\nexport function setUserData(data) {\n  return { type: SET_USER_DATA, payload: data };\n}","import { SET_ROOM_DATA, SET_USER_DATA } from \"../actions/infoAction\";\n\nconst initialState = {\n  userData: {},\n  roomData: {}\n};\n\nexport function infoReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case SET_USER_DATA:\n      var user = action.payload;\n      return { ...state, userData: user };\n\n    case SET_ROOM_DATA:\n      var room = action.payload;\n      return { ...state, roomData: room };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { infoReducer } from \"./infoReducer\";\n\nexport default combineReducers({\n  pageInfo: infoReducer\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nlet middleware = [thunk];\nif (process.env.NODE_ENV !== \"production\") {\n\tmiddleware = [...middleware, logger];\n}\n\nmiddleware = applyMiddleware(...middleware);\n\nconst store = createStore(reducers, middleware);\n\nexport default store;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst FIREBASE_CONFIG = {\n    apiKey: \"AIzaSyDUMCwUCgkZCf4Dec5QQByW2pk3qdTTnmk\",\n    authDomain: \"code-pair-ec2c8.firebaseapp.com\",\n    databaseURL: \"https://code-pair-ec2c8.firebaseio.com\",\n    projectId: \"code-pair-ec2c8\",\n    storageBucket: \"code-pair-ec2c8.appspot.com\",\n    messagingSenderId: \"930776554345\"\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\n\nexport const firebaseAuth = firebase.auth();\nexport const GITHUB_AUTH_PROVIDER = new firebase.auth.GithubAuthProvider();","import React, { Component } from 'react';\nimport {Button} from 'antd';\nimport './LandingPage.scss';\n// import FactCard from '../FactCard/FactCard';\nimport {getsnippets} from '../../actions/snippetsAction';\n\nclass LandingPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: undefined,\n        }\n    }\n\n    componentDidMount() {\n        getsnippets().then(res => {\n            this.setState({\n                data: res.data.result\n            })\n        })\n    }\n\n    render(){\n        if(!this.state.data){\n            return <div/>\n        }else{\n        return(\n            <div className='landingpage-wrapper'>  \n                {/* <FactCard snippet={this.state.data}/> */}\n                <Button style={{ width: 620 }} onClick={this.props.onLoginClick}>Enter</Button>\n            </div>\n        );\n        }\n    }\n}\n\nexport default LandingPage;","import axios from 'axios';\n\nconst getsnippets = (code) => {\n    return axios.get('/api/snippets')\n}\n\n export { getsnippets }","import axios from 'axios';\n\nconst postFile = (data) => {\n    return axios.post('/api/codefile/', data)\n}\n\n export { postFile }","import React, { Component } from 'react';\nimport { Modal, Input, Select} from 'antd';\nimport { connect } from \"react-redux\";\nimport randomstring from \"randomstring\";\nimport { setRoomData } from '../../actions/infoAction';\nimport { postFile } from '../../actions/postFileAction';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\nclass CreateRoom extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            language: 'python',\n            room: randomstring.generate({length: 12,charset: 'alphabetic'})\n       }\n    }\n\n    setLanguage = (value) => {\n        this.setState({\n            language: value\n        })\n    }\n\n\n    setRoom = () => {\n        let room = {\n            language: this.state.language,\n            roomName: this.state.room\n        }\n        \n        this.props.setRoomData(room)\n        this.props.setModalVisible(false)\n        this.props.setInRoom(true)\n    }\n\n    handleUploadFile = (event) => {\n        const data = new FormData();\n        data.append('file', event.target.files[0]);\n        // '/files' is your node.js route that triggers our middleware\n        postFile(data).then(res => {\n            this.props.setCodeFromFile(res.data.result)\n        });\n    }\n\n    render(){\n        const LANGUAGES = ['python', 'javascript']\n        return(\n            <Modal\n            title=\"Create Room\"\n            visible={this.props.modalVisible}\n            onOk={() => this.setRoom()}\n            onCancel={() => this.props.setModalVisible(false)}\n          >\n            <Input addonBefore=\"room\" style={{ width: '100%' }} defaultValue={this.state.room} disabled/> \n            <br/>\n            <br/>\n            <InputGroup compact>\n                <Select style={{ width: '50%' }} defaultValue={this.state.language} onChange={this.setLanguage}>\n                    {LANGUAGES.map((item, i) => <Option key={i} value={item}>{item}</Option>)}\n                </Select>\n                <Input type=\"file\" onChange={this.handleUploadFile} />        \n            </InputGroup>\n          </Modal>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(CreateRoom);\n","import React, { Component } from 'react';\nimport './RightSection.scss';\n\nclass FactCard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {}\n    }\n    \n    render(){\n        return(\n            <div className='rightsection'>\n                <code>\n                    {this.props.result}\n                </code>\n            </div>\n        );\n    }\n}\n\nexport default FactCard;","import React, { Component } from 'react';\nimport { Modal, Input} from 'antd';\nimport { connect } from \"react-redux\";\nimport { setRoomData } from '../../actions/infoAction';\n\n\nclass JoinRoom extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            room: ''\n       }\n    }\n\n    setRoom = (e) => {\n        this.setState({\n            room: e.target.value\n        });\n    }\n\n    getRoom = () => {\n        let room = {\n            roomName: this.state.room\n        }\n        this.props.setRoomData(room)\n        this.props.setModalVisible(false)\n        this.props.setInRoom(true)\n    }\n\n    render(){\n        return(\n            <Modal\n            title=\"Join Room\"\n            visible={this.props.modalVisible}\n            onOk={() => this.getRoom()}\n            onCancel={() => this.props.setModalVisible(false)}\n          >\n            <Input addonBefore=\"room\" style={{ width: '100%' }} value={this.state.room} onChange={this.setRoom}/>       \n\n          </Modal>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(JoinRoom);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\n// Import Brace and the AceEditor Component\n// eslint-disable-next-line\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\nimport { Input, Select, Button} from 'antd';\n\nimport io from 'socket.io-client';\n\n// Import a Mode (language)\nimport 'brace/mode/javascript';\nimport 'brace/mode/python';\n\n// Import a Theme (okadia, github, xcode etc)\nimport 'brace/theme/solarized_dark';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow';\nimport 'brace/theme/monokai';\n\nimport './Editor.scss';\n\nconst Option = Select.Option;\nconst InputGroup = Input.Group;\n\nconst socket = io()\n\nclass Editor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state ={\n            language: 'javascript',\n            theme: 'tomorrow',\n            code: '',\n            room: '',\n            users: []\n        }\n\n        socket.on('receive code', (payload) => this.updateCodeFromSockets(payload.code));\n        socket.on('load users and code', () => this.sendUsersAndCode())\n        socket.on('receive users and code', (payload) => this.updateUsersAndCodeInState(payload))\n    }\n\n    componentWillMount() {\n        this.setState({\n            code: this.props.codeFromFile\n        })\n    }\n\n    onChange = (newValue) =>  {\n        this.setState({\n            code: newValue\n        }, () => console.log(this.state.code))\n        socket.emit('coding event', {code: newValue, room: this.state.room})\n    }\n\n    setTheme = (newTheme) => {\n        this.setState({\n            theme: newTheme\n        })\n    }\n\n    componentDidMount() {\n        this.setState({\n            room: this.props.roomData.roomName,\n            language: this.props.roomData.language\n        }, () => socket.emit('room', {room: this.state.room}))  \n    }\n\n    componentWillUnmount() {\n        socket.emit('leave room', {room: this.state.room})\n    }\n    \n\n    updateCodeFromSockets = (code) => {\n        this.setState({\n            code: code\n        });\n    }\n\n    updateUsersAndCodeInState = (payload) => {\n        this.setState({\n            code: payload.code,\n            language: payload.language\n        });\n    }\n\n    sendUsersAndCode = () =>  {\n        socket.emit('send users and code', {room:this.state.room, code: this.state.code, language: this.state.language})\n    }\n\n    downloadFile = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([this.state.code], {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        if(this.state.language === \"javascript\"){\n            element.download = \"file.js\"            \n        }else if(this.state.language === \"python\"){\n            element.download = \"file.py\" \n        }\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n      }\n    \n\n    render() {\n        const { language, theme, code } = this.state;\n        const THEMES =['tomorrow', 'solarized_dark', 'monokai', 'github'];\n\n\n        return (\n            <div className='editor'>\n                <div className = 'option'>\n                    <InputGroup compact>\n                        <Input style={{ width: '75px' }} defaultValue=\"theme\" disabled/>\n                        <Select style={{ width: '125px' }} defaultValue={this.state.theme} onChange={this.setTheme}>\n                            {THEMES.map(item => (<Option key={item} value={item}>{item}</Option>))}\n                        </Select>  \n                    </InputGroup>\n                    <Button onClick={() => this.downloadFile()}>download code</Button>\n                    <Button onClick={() => this.props.run(this.state.code, this.state.language)}>run</Button>\n                </div>\n                <AceEditor\n                mode={language}\n                theme={theme}\n                name=\"myeditor\"\n                onChange={this.onChange}\n                value={code}\n                editorProps={{ $blockScrolling: true }}\n                setOptions={{\n                showLineNumbers: true,\n                tabSize: 2,\n                showPrintMargin: false\n                }}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(Editor);","import axios from 'axios';\n\nconst runPythonCode = (code) => {\n    return axios.post('/api/code/python', {code})\n}\n\n export { runPythonCode }","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { connect } from \"react-redux\";\nimport { setRoomData } from '../../actions/infoAction';\nimport Video from 'twilio-video';\nimport axios from 'axios';\nimport './VideoComponent.scss';\n\nclass VideoComponent extends Component {\n constructor(props) {\n   super();\n\n   this.state = {\n    identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */\n    roomName: '',    /* Will store the room name */\n    roomNameErr: false,  /* Track error for room name TextField. This will    enable us to show an error message when this variable is true */\n    previewTracks: null,\n    localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */\n    hasJoinedRoom: false,\n    activeRoom: null // Track the current active room\n    };\n }\n\n componentDidMount() {\n    axios.post('/api/twilio/token', {user: `${this.props.userData.name}-${this.props.userData.id}`}).then(results => {\n      const { identity, token } = results.data;\n      this.setState({ identity, token });\n    });\n    this.setState({\n        roomName: this.props.roomData.roomName\n    })\n    console.log(this.state.roomName)\n }\n\n joinRoom = () => {\n    if (!this.state.roomName.trim()) {\n        this.setState({ roomNameErr: true });\n        return;\n    }\n\n    console.log(\"Joining room '\" + this.state.roomName + \"'...\");\n    let connectOptions = {\n        name: this.state.roomName\n    };\n\n    if (this.state.previewTracks) {\n        connectOptions.tracks = this.state.previewTracks;\n    }\n\n    Video.connect(this.state.token, connectOptions).then(this.roomJoined, error => {\n    console.log('Could not connect to Twilio: ' + error.message);\n    });\n }\n\n // Attach the Tracks to the DOM.\nattachTracks(tracks, container) {\n    tracks.forEach(track => {\n      container.appendChild(track.attach());\n    });\n  }\n  \n  // Attach the Participant's Tracks to the DOM.\n  attachParticipantTracks(participant, container) {\n    var tracks = Array.from(participant.tracks.values());\n    this.attachTracks(tracks, container);\n  }\n  \n  roomJoined = (room) => {\n    // Called when a participant joins a room\n    console.log(\"Joined as '\" + this.state.identity + \"'\");\n    this.setState({\n      activeRoom: room,\n      localMediaAvailable: true,\n      hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’\n    });\n  \n    // Attach LocalParticipant's tracks to the DOM, if not already attached.\n    var previewContainer = this.refs.localMedia;\n    if (!previewContainer.querySelector('video')) {\n      this.attachParticipantTracks(room.localParticipant, previewContainer);\n    }\n    \n    if (!previewContainer.querySelector('video')) {\n        this.attachParticipantTracks(room.localParticipant, previewContainer);\n      }\n  \n      // Attach the Tracks of the room's participants.\n      room.participants.forEach(participant => {\n        console.log(\"Already in Room: '\" + participant.identity + \"'\");\n        var previewContainer = this.refs.remoteMedia;\n        this.attachParticipantTracks(participant, previewContainer);\n      });\n  \n      // Participant joining room\n      room.on('participantConnected', participant => {\n        console.log(\"Joining: '\" + participant.identity + \"'\");\n      });\n  \n      // Attach participant’s tracks to DOM when they add a track\n      room.on('trackAdded', (track, participant) => {\n        console.log(participant.identity + ' added track: ' + track.kind);\n        var previewContainer = this.refs.remoteMedia;\n        this.attachTracks([track], previewContainer);\n      });\n  \n      // Detach participant’s track from DOM when they remove a track.\n      room.on('trackRemoved', (track, participant) => {\n        this.detachTracks([track]);\n      });\n  \n      // Detach all participant’s track when they leave a room.\n      room.on('participantDisconnected', participant => {\n        console.log(\"Participant '\" + participant.identity + \"' left the room\");\n        this.detachParticipantTracks(participant);\n      });\n  \n      // Once the local participant leaves the room, detach the Tracks\n      // of all other participants, including that of the LocalParticipant.\n      room.on('disconnected', () => {\n        if (this.state.previewTracks) {\n          this.state.previewTracks.forEach(track => {\n            track.stop();\n          });\n        }\n        this.detachParticipantTracks(room.localParticipant);\n        room.participants.forEach(this.detachParticipantTracks);\n        \n        // eslint-disable-next-line\n        this.state.activeRoom = null;\n        this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n      });\n  }\n\n  detachTracks = (tracks) => {\n    tracks.forEach(track => {\n      track.detach().forEach(detachedElement => {\n        detachedElement.remove();\n      });\n    });\n  }\n\ndetachParticipantTracks = (participant) => {\n  var tracks = Array.from(participant.tracks.values());\n  this.detachTracks(tracks);\n}\n\n  leaveRoom = () => {\n    this.state.activeRoom.disconnect();\n    this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n }\n\n render() {\n    let showLocalTrack = this.state.localMediaAvailable ? (\n    <div className='wrapper'>\n        <div ref=\"localMedia\" />\n        <div ref=\"remoteMedia\" id=\"remote-media\" />\n\n    </div>) : ''; \n\n    let joinOrLeaveRoomButton = this.state.hasJoinedRoom ? (\n        <Button type='primary' shape=\"round\" size=\"small\" onClick={this.leaveRoom}>Leave Video Chat</Button>) : (\n        <Button type='primary' shape=\"round\" size=\"small\" onClick={this.joinRoom}>Join Video Chat</Button>);\n\n   return (\n        <div className='wrapper'>\n            {joinOrLeaveRoomButton}\n            {showLocalTrack}\n        </div>\n   );\n }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(VideoComponent);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Layout, Button, Avatar, Empty, Popconfirm, Tag } from 'antd';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport CreateRoom from '../CreateRoom/CreateRoom';\nimport RightSection from '../RightSection/RightSection';\nimport JoinRoom from '../JoinRoom/JoinRoom';\nimport PanelGroup from 'react-panelgroup';\nimport Editor from '../Editor/Editor';\nimport { runPythonCode } from '../../actions/runCode';\nimport { setRoomData } from '../../actions/infoAction';\nimport _ from 'lodash';\nimport './Dashboard.scss';\nimport 'react-chat-widget/lib/styles.css';\nimport VideoComponent from '../VideoComponent/VideoComponent';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass Dashboard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            collapsed: false,\n            Inroom: false,\n            createroommodal: false,\n            joinroommodal: false,\n            result: undefined,\n            codeFromFile: ''\n        }\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.userData !== this.props.userData){\n            console.log(this.props.userData)\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n        });\n    }\n\n    onCollapse = (collapsed) => {\n        console.log(collapsed);\n        this.setState({ collapsed });\n    }\n\n    createRoomVisible = (visible) => {\n        this.setState({ createroommodal: visible });\n    }\n\n    joinRoomVisible = (visible) => {\n        this.setState({ joinroommodal: visible });\n    }\n\n    \n\n    setInRoom = (value)=> {\n        this.setState({\n            Inroom: value\n        })\n    }\n\n    confirm = (e) => {\n        this.props.onLogoutClick();\n    }\n\n    handleNewUserMessage = (newMessage) => {\n        console.log(`New message incoming! ${newMessage}`);\n        // Now send the message throught the backend API\n        if(newMessage === 'hi' || newMessage === 'hey'){\n            addResponseMessage(\"hello\");\n        }else if(newMessage === 'bye'){\n            addResponseMessage(\"goodbye\");\n        }else{\n            addResponseMessage(\"i dont understand\")\n        }\n      }\n      \n    run = (code, language) => {\n        let value = code;\n        if(language === 'python'){\n            runPythonCode(value).then(result => {\n                this.setState({\n                    result: result.data.result\n                })\n            })\n        }else{\n            this.setState({\n                result: \"language not supported\"\n            })\n        }\n    }\n\n    setCodeFromFile = (code) => {\n        this.setState({\n            codeFromFile: code\n        })\n    }\n    \n    render(){\n        if(_.isEmpty(this.props.userData)){\n            return <div/>\n        }else{\n            return (\n            <div className='dashboard'>\n                <Layout style={{ minHeight: '100vh' }}>\n                    <Sider trigger={null} collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n                    <div className=\"logo\">\n                        <Avatar size='large' src={this.props.userData.photo} />\n                    </div>\n                    <div style={{textAlign: 'center'}}>\n                        {this.state.Inroom && (\n                            <Tag> {this.props.roomData.roomName}</Tag>\n                        )}\n                    </div>\n                    <Popconfirm title=\"Are you sure you want to log out?\" placement='right' onConfirm={this.confirm} okText=\"Yes\" cancelText=\"No\">\n                        <Button type=\"primary\" style={{ width: '50%', position: 'absolute', bottom: '50px', left: '25%' }}>log out</Button>                 \n                    </Popconfirm>\n                    </Sider>\n                    <Layout>\n                        <Header style={{ background: '#fff', padding: 0}}>                 \n                            {this.state.Inroom && <VideoComponent/>}              \n                        </Header>\n                        <Content style={{ margin: '0 16px' }}>\n                            {this.state.Inroom ?\n                                <PanelGroup style={{ background: '#fff', minHeight: '100%' }}>\n                                    <Editor run={this.run} codeFromFile={this.state.codeFromFile}/>\n                                    {this.state.result ? <RightSection result={this.state.result}/> : <div />}\n                                </PanelGroup>\n                                :\n                                <div className='croom'>\n                                      <Empty \n                                        description={\n                                            <span>\n                                                no workspace :(\n                                            </span>\n                                        }\n                                        style={{marginBottom: '10px'}}\n                                    >\n                                    </Empty>\n                                    <div>\n                                        <Button type='primary' onClick={() => this.createRoomVisible(true)}>Create Room</Button> \n                                        {\" \"} / {\" \"}\n                                        <Button type='primary' onClick={() => this.joinRoomVisible(true)}>Join Room</Button>\n                                    </div>\n                                </div>\n                            }\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>\n                            akin develops ©2019 Created by Akin Shonibare\n                        </Footer>\n                    </Layout>\n                </Layout>\n                <Widget handleNewUserMessage={this.handleNewUserMessage} title='chat room' subtitle=''/>\n                <CreateRoom modalVisible={this.state.createroommodal} setModalVisible={this.createRoomVisible} setInRoom={this.setInRoom} setCodeFromFile={this.setCodeFromFile}/>                \n                <JoinRoom modalVisible={this.state.joinroommodal} setModalVisible={this.joinRoomVisible} setInRoom={this.setInRoom}/>\n            </div>\n            )\n        }\n    }\n}\n//screencast, video, message, audio\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(Dashboard);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter, Switch, Route } from \"react-router-dom\";\nimport { firebaseAuth, GITHUB_AUTH_PROVIDER } from \"./utils/firebase\";\nimport LandingPage from './components/LandingPage/LandingPage';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport { setUserData } from './actions/infoAction';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          authLoading: true\n        }\n    }\n\n    componentDidMount() {\n      this.authObserver = firebaseAuth.onAuthStateChanged(user => {\n        if(user){\n          let visitor = {};\n          visitor['name'] = user.providerData[0]['displayName'];\n          visitor['email'] = user.providerData[0]['email'];\n          visitor['id'] = user.providerData[0]['uid'];\n          visitor['photo'] = user.providerData[0]['photoURL'];\n          this.props.setUserData(visitor)\n        }\n\n          user\n            ? this.props.history.push('/')\n            : this.props.history.push('/login');\n          this.setState({ authLoading: false });\n        });\n    }\n\n    onLoginClick = async () => {\n      this.setState({ authLoading: true });\n      try {\n        await firebaseAuth.signInWithPopup(GITHUB_AUTH_PROVIDER);\n      } catch (e) {\n        console.error(e.message || \"error authenticating user.\");\n        this.setState({ authLoading: false });\n      }\n    };\n\n\n    onLogoutClick = async () => {\n      try {\n          await firebaseAuth.signOut();\n      } catch (e) {\n          console.error(e.message || \"error signing user out.\");\n      }\n    };\n    \n    componentWillUnmount() {\n      this.authObserver();\n    }\n\n    render(){\n        const { authLoading } = this.state;\n\n        return(\n          <Switch>\n            <Route\n              exact path=\"/\"\n              render={(props) => <Dashboard onLogoutClick={this.onLogoutClick} {...props}/>}\n            />\n            <Route\n              exact path=\"/login\"\n              render={(props) => <LandingPage loading={authLoading} onLoginClick={this.onLoginClick} {...props}/>}\n            />\n          </Switch>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageData,\n        teamData: state.pageData\n\t};\n}\n\nconst actions = {\n\tsetUserData\n};\n\nexport default withRouter(connect(\n\tmapStateToProps,\n\tactions\n)(App));","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nimport {isMobile} from 'react-device-detect';\nimport { Tag } from 'antd';\nimport App from \"./App\";\n\nconst routes = (\n  <CookiesProvider>\n    <Router>\n      {isMobile ? <div style={{ width: '100%', height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center'}}><Tag color=\"red\">code pair unavailable on mobile, open on laptop/desktop</Tag></div> : <App />}\n    </Router>\n  </CookiesProvider>\n);\n\nexport default routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport store from './store';\nimport routes from './routes'\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\n\nconst App = <Provider store={store}>{routes}</Provider>;\n\n\nReactDOM.render(App, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}