{"version":3,"sources":["actions/infoAction.js","reducers/infoReducer.js","reducers/index.js","store.js","utils/firebase/index.js","components/LandingPage/LandingPage.js","actions/snippetsAction.js","actions/postFileAction.js","components/CreateRoom/CreateRoom.js","components/RightSection/RightSection.js","components/JoinRoom/JoinRoom.js","components/Editor/Editor.js","actions/runCode.js","components/VideoComponent/VideoComponent.js","components/Dashboard/Dashboard.js","App.js","routes.js","serviceWorker.js","index.js"],"names":["SET_ROOM_DATA","SET_USER_DATA","setRoomData","data","type","payload","initialState","userData","roomData","combineReducers","pageInfo","state","arguments","length","undefined","action","user","Object","objectSpread","room","middleware","thunk","applyMiddleware","apply","toConsumableArray","store","createStore","reducers","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","auth","GITHUB_AUTH_PROVIDER","GithubAuthProvider","LandingPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","axios","get","then","res","setState","result","react_default","a","createElement","className","es_button","style","width","onClick","onLoginClick","icon","Component","postFile","post","InputGroup","input","Group","Option","es_select","CreateRoom","setLanguage","value","language","setRoom","roomName","setModalVisible","setInRoom","handleUploadFile","event","FormData","append","target","files","setCodeFromFile","randomstring","generate","charset","modal","title","visible","modalVisible","onOk","onCancel","addonBefore","defaultValue","disabled","compact","onChange","map","item","i","key","name","id","actions","connect","FactCard","JoinRoom","e","getRoom","socket","io","Editor","context","newValue","code","setCurrentlyTyping","concat","emit","currentlyTyping","setTheme","newTheme","theme","joinUser","combinedUsers","users","cleanUsers","Array","from","Set","filter","setUsers","updateCodeFromSockets","console","log","updateUsersAndCodeInState","newUsers","sendUsersAndCode","downloadFile","element","document","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","on","removeUser","codeFromFile","assign","indexOfUserToDelete","findIndex","Olduser","splice","_this3","_this$state","Editor_InputGroup","Editor_Option","run","react_ace_lib_default","mode","editorProps","$blockScrolling","setOptions","showLineNumbers","tabSize","showPrintMargin","runPythonCode","VideoComponent","joinRoom","trim","connectOptions","previewTracks","tracks","Video","token","roomJoined","error","message","roomNameErr","identity","activeRoom","localMediaAvailable","hasJoinedRoom","previewContainer","refs","localMedia","querySelector","attachParticipantTracks","localParticipant","participants","forEach","participant","remoteMedia","track","kind","attachTracks","detachTracks","detachParticipantTracks","stop","detach","detachedElement","remove","values","leaveRoom","disconnect","results","_results$data","container","attach","showLocalTrack","ref","joinOrLeaveRoomButton","shape","size","Header","Footer","Sider","Content","Dashboard","toggle","collapsed","onCollapse","createRoomVisible","createroommodal","joinRoomVisible","joinroommodal","Inroom","confirm","onLogoutClick","handleNewUserMessage","newMessage","addResponseMessage","prevProps","prevState","_","isEmpty","layout","minHeight","trigger","collapsible","avatar","src","photo","textAlign","tag","timeline","Item","color","split","popconfirm","placement","onConfirm","okText","cancelText","position","bottom","left","background","padding","components_VideoComponent_VideoComponent","margin","PanelGroup","components_Editor_Editor","RightSection_RightSection","empty","description","marginBottom","lib","subtitle","components_CreateRoom_CreateRoom","components_JoinRoom_JoinRoom","App","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","authLoading","signInWithPopup","t0","_callee2","_context2","signOut","authObserver","onAuthStateChanged","visitor","providerData","setUserData","history","push","Switch","Route","exact","path","render","components_Dashboard_Dashboard","components_LandingPage_LandingPage","loading","withRouter","pageData","teamData","routes","es6","BrowserRouter","isMobile","height","display","alignItems","justifyContent","src_App","Boolean","window","location","hostname","match","react_redux_es","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5767e2fc.chunk.js","sourcesContent":["export const SET_ROOM_DATA = \"SET_ROOM_DATA\";\nexport const SET_USER_DATA = \"SET_USER_DATA\";\n\nexport function setRoomData(data) {\n  return { type: SET_ROOM_DATA, payload: data };\n}\n\nexport function setUserData(data) {\n  return { type: SET_USER_DATA, payload: data };\n}","import { SET_ROOM_DATA, SET_USER_DATA } from \"../actions/infoAction\";\n\nconst initialState = {\n  userData: {},\n  roomData: {}\n};\n\nexport function infoReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case SET_USER_DATA:\n      var user = action.payload;\n      return { ...state, userData: user };\n\n    case SET_ROOM_DATA:\n      var room = action.payload;\n      return { ...state, roomData: room };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { infoReducer } from \"./infoReducer\";\n\nexport default combineReducers({\n  pageInfo: infoReducer\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nlet middleware = [thunk];\nif (process.env.NODE_ENV !== \"production\") {\n\tmiddleware = [...middleware, logger];\n}\n\nmiddleware = applyMiddleware(...middleware);\n\nconst store = createStore(reducers, middleware);\n\nexport default store;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst FIREBASE_CONFIG = {\n    apiKey: \"AIzaSyDUMCwUCgkZCf4Dec5QQByW2pk3qdTTnmk\",\n    authDomain: \"code-pair-ec2c8.firebaseapp.com\",\n    databaseURL: \"https://code-pair-ec2c8.firebaseio.com\",\n    projectId: \"code-pair-ec2c8\",\n    storageBucket: \"code-pair-ec2c8.appspot.com\",\n    messagingSenderId: \"930776554345\"\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\n\nexport const firebaseAuth = firebase.auth();\nexport const GITHUB_AUTH_PROVIDER = new firebase.auth.GithubAuthProvider();","import React, { Component } from 'react';\nimport {Button, Icon } from 'antd';\nimport './LandingPage.scss';\n// import FactCard from '../FactCard/FactCard';\nimport {getsnippets} from '../../actions/snippetsAction';\n\nclass LandingPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: undefined,\n        }\n    }\n\n    componentDidMount() {\n        getsnippets().then(res => {\n            this.setState({\n                data: res.data.result\n            })\n        })\n    }\n\n    render(){\n        if(!this.state.data){\n            return <div/>\n        }else{\n        return(\n            <div className='landingpage-wrapper'>  \n                {/* <FactCard snippet={this.state.data}/> */}\n                <Button style={{ width: 620 }} onClick={this.props.onLoginClick}><Icon type=\"github\" />Enter Using Github</Button>\n            </div>\n        );\n        }\n    }\n}\n\nexport default LandingPage;","import axios from 'axios';\n\nconst getsnippets = (code) => {\n    return axios.get('/api/snippets')\n}\n\n export { getsnippets }","import axios from 'axios';\n\nconst postFile = (data) => {\n    return axios.post('/api/codefile/', data)\n}\n\n export { postFile }","import React, { Component } from 'react';\nimport { Modal, Input, Select, Button} from 'antd';\nimport { connect } from \"react-redux\";\nimport randomstring from \"randomstring\";\nimport { setRoomData } from '../../actions/infoAction';\nimport { postFile } from '../../actions/postFileAction';\nimport './CreateRoom.scss';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\nclass CreateRoom extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            language: 'python',\n            room: randomstring.generate({length: 12,charset: 'alphabetic'})\n       }\n    }\n\n    setLanguage = (value) => {\n        this.setState({\n            language: value\n        })\n    }\n\n\n    setRoom = () => {\n        let room = {\n            language: this.state.language,\n            roomName: this.state.room\n        }\n        \n        this.props.setRoomData(room)\n        this.props.setModalVisible(false)\n        this.props.setInRoom(true)\n    }\n\n    handleUploadFile = (event) => {\n        const data = new FormData();\n        data.append('file', event.target.files[0]);\n        // '/files' is your node.js route that triggers our middleware\n        postFile(data).then(res => {\n            this.props.setCodeFromFile(res.data.result)\n        });\n    }\n\n    render(){\n        const LANGUAGES = ['python', 'javascript']\n        return(\n            <Modal\n            title=\"Create Room\"\n            visible={this.props.modalVisible}\n            onOk={() => this.setRoom()}\n            onCancel={() => this.props.setModalVisible(false)}\n            \n          >\n            <Input addonBefore=\"room\" style={{ width: '100%' }} defaultValue={this.state.room} disabled/> \n            <br/>\n            <br/>\n            <InputGroup compact>\n                <Select style={{ width: '50%' }} defaultValue={this.state.language} onChange={this.setLanguage}>\n                    {LANGUAGES.map((item, i) => <Option key={i} value={item}>{item}</Option>)}\n                </Select>\n                <Button style={{ width: '50%' }} className='croom-button'>\n                    Upload Starter Code File\n                    <input type=\"file\" name=\"file\" id=\"code-file\" className=\"inputfile\" onChange={this.handleUploadFile} />\n                </Button>\n     \n            </InputGroup>\n          </Modal>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(CreateRoom);\n","import React, { Component } from 'react';\nimport './RightSection.scss';\n\nclass FactCard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {}\n    }\n    \n    render(){\n        return(\n            <div className='rightsection'>\n                <code>\n                    {this.props.result}\n                </code>\n            </div>\n        );\n    }\n}\n\nexport default FactCard;","import React, { Component } from 'react';\nimport { Modal, Input} from 'antd';\nimport { connect } from \"react-redux\";\nimport { setRoomData } from '../../actions/infoAction';\n\n\nclass JoinRoom extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            room: ''\n       }\n    }\n\n    setRoom = (e) => {\n        this.setState({\n            room: e.target.value\n        });\n    }\n\n    getRoom = () => {\n        let room = {\n            roomName: this.state.room\n        }\n        this.props.setRoomData(room)\n        this.props.setModalVisible(false)\n        this.props.setInRoom(true)\n    }\n\n    render(){\n        return(\n            <Modal\n            title=\"Join Room\"\n            visible={this.props.modalVisible}\n            onOk={() => this.getRoom()}\n            onCancel={() => this.props.setModalVisible(false)}\n          >\n            <Input addonBefore=\"room\" style={{ width: '100%' }} value={this.state.room} onChange={this.setRoom}/>       \n\n          </Modal>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(JoinRoom);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\n// Import Brace and the AceEditor Component\n// eslint-disable-next-line\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\nimport { Input, Select, Button} from 'antd';\n\nimport io from 'socket.io-client';\n\n// Import a Mode (language)\nimport 'brace/mode/javascript';\nimport 'brace/mode/python';\n\n// Import a Theme (okadia, github, xcode etc)\nimport 'brace/theme/solarized_dark';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow';\nimport 'brace/theme/monokai';\n\nimport './Editor.scss';\n\nconst Option = Select.Option;\nconst InputGroup = Input.Group;\n\nconst socket = io()\n\nclass Editor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state ={\n            language: 'javascript',\n            theme: 'tomorrow',\n            code: '',\n            room: '',\n            // users: [],\n            currentlyTyping: null\n        }\n\n        socket.on('receive code', (payload) => this.updateCodeFromSockets(payload));\n        socket.on('load users and code', () => this.sendUsersAndCode())\n        socket.on('receive users and code', (payload) => this.updateUsersAndCodeInState(payload))\n        socket.on('new user join', (users) => this.joinUser(users))\n        socket.on('user left room', (user) => this.removeUser(user))\n    }\n\n    componentWillMount() {\n        if(this.props.codeFromFile){\n            this.setState({\n                code: this.props.codeFromFile\n            })\n        }\n    }\n\n    onChange = (newValue) =>  {\n        this.setState({\n            code: newValue,\n            // currentlyTyping: `${this.props.userData.name}-${this.props.userData.id}`\n        })\n        this.props.setCurrentlyTyping(`${this.props.userData.name}-${this.props.userData.id}`)\n        socket.emit('coding event', {code: newValue, room: this.state.room, currentlyTyping: `${this.props.userData.name}-${this.props.userData.id}`})\n    }\n\n    setTheme = (newTheme) => {\n        this.setState({\n            theme: newTheme\n        })\n    }\n\n    joinUser = (user) => {\n        const combinedUsers = [...this.props.users, user]\n        const newUsers = Array.from(new Set(combinedUsers));\n        const cleanUsers = newUsers.filter(user => {return user.length > 1})\n        // this.setState({users: cleanUsers})\n        this.props.setUsers(cleanUsers)\n    }\n\n    removeUser(user) {\n        const newUsers = Object.assign([], this.props.users);\n        const indexOfUserToDelete = this.props.users.findIndex(Olduser => {return Olduser == user.user})\n        newUsers.splice(indexOfUserToDelete, 1);\n        // this.setState({users: newUsers})\n        this.props.setUsers(newUsers)\n      }\n\n    componentDidMount() {\n        const users = [...this.props.users, `${this.props.userData.name}-${this.props.userData.id}`];\n        const user = `${this.props.userData.name}-${this.props.userData.id}`;\n        this.props.setUsers(users)        \n        this.setState({\n            room: this.props.roomData.roomName,\n            language: this.props.roomData.language,\n            // users: users\n        }, () => socket.emit('room', {room: this.state.room, user: user}))  \n    }\n\n    componentWillUnmount() {\n        socket.emit('leave room', {room: this.state.room})\n    }\n    \n\n    updateCodeFromSockets = (payload) => {\n        console.log(payload)\n        this.setState({\n            code: payload.code,\n            // currentlyTyping: payload.currentlyTyping\n        });\n        this.props.setCurrentlyTyping(payload.currentlyTyping)\n    }\n\n    updateUsersAndCodeInState = (payload) => {\n        this.setState({\n            code: payload.code,\n            language: payload.language,\n            // users: payload.users\n        });\n        let newUsers = [...payload.users, `${this.props.userData.name}-${this.props.userData.id}`]\n        this.props.setUsers(newUsers)\n\n    }\n\n    sendUsersAndCode = () =>  {\n        socket.emit('send users and code', {room:this.state.room, code: this.state.code, language: this.state.language, users: this.props.users})\n    }\n\n    downloadFile = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([this.state.code], {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        if(this.state.language === \"javascript\"){\n            element.download = \"file.js\"            \n        }else if(this.state.language === \"python\"){\n            element.download = \"file.py\" \n        }\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    }\n    \n\n    render() {\n        const { language, theme, code } = this.state;\n        const THEMES =['tomorrow', 'solarized_dark', 'monokai', 'github'];\n\n\n        return (\n            <div className='editor'>\n                <div className = 'option'>\n                    <InputGroup compact>\n                        <Input style={{ width: '75px' }} defaultValue=\"theme\" disabled/>\n                        <Select style={{ width: '125px' }} defaultValue={this.state.theme} onChange={this.setTheme}>\n                            {THEMES.map(item => (<Option key={item} value={item}>{item}</Option>))}\n                        </Select>  \n                    </InputGroup>\n                    <Button onClick={() => this.downloadFile()}>download code</Button>\n                    <Button onClick={() => this.props.run(this.state.code, this.state.language)}>run</Button>\n                </div>\n                <AceEditor\n                mode={language}\n                theme={theme}\n                name=\"myeditor\"\n                onChange={this.onChange}\n                value={code}\n                editorProps={{ $blockScrolling: true }}\n                setOptions={{\n                showLineNumbers: true,\n                tabSize: 2,\n                showPrintMargin: false\n                }}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(Editor);","import axios from 'axios';\n\nconst runPythonCode = (code) => {\n    return axios.post('/api/code/python', {code})\n}\n\n export { runPythonCode }","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { connect } from \"react-redux\";\nimport { setRoomData } from '../../actions/infoAction';\nimport Video from 'twilio-video';\nimport axios from 'axios';\nimport './VideoComponent.scss';\n\nclass VideoComponent extends Component {\n constructor(props) {\n   super();\n\n   this.state = {\n    identity: null,\n    roomName: '',    /* Will store the room name */\n    roomNameErr: false,  /* Track error for room name TextField. This will    enable us to show an error message when this variable is true */\n    previewTracks: null,\n    localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */\n    hasJoinedRoom: false,\n    activeRoom: null // Track the current active room\n    };\n }\n\n componentDidMount() {\n    axios.post('/api/twilio/token', {user: `${this.props.userData.name}-${this.props.userData.id}`}).then(results => {\n      const { identity, token } = results.data;\n      this.setState({ identity, token });\n    });\n    this.setState({\n        roomName: this.props.roomData.roomName\n    })\n    console.log(this.state.roomName)\n }\n\n componentWillUnmount() {\n   this.leaveRoom();\n };\n\n joinRoom = () => {\n    if (!this.state.roomName.trim()) {\n        this.setState({ roomNameErr: true });\n        return;\n    }\n    let connectOptions = {\n        name: this.state.roomName\n    };\n\n    if (this.state.previewTracks) {\n        connectOptions.tracks = this.state.previewTracks;\n    }\n\n    Video.connect(this.state.token, connectOptions).then(this.roomJoined, error => {\n    console.log('Could not connect to Twilio: ' + error.message);\n    });\n }\n\n // Attach the Tracks to the DOM.\nattachTracks(tracks, container) {\n    tracks.forEach(track => {\n      container.appendChild(track.attach());\n    });\n  }\n  \n  // Attach the Participant's Tracks to the DOM.\n  attachParticipantTracks(participant, container) {\n    var tracks = Array.from(participant.tracks.values());\n    this.attachTracks(tracks, container);\n  }\n  \n  roomJoined = (room) => {\n    // Called when a participant joins a room\n    console.log(\"Joined as '\" + this.state.identity + \"'\");\n    this.setState({\n      activeRoom: room,\n      localMediaAvailable: true,\n      hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’\n    });\n  \n    // Attach LocalParticipant's tracks to the DOM, if not already attached.\n    var previewContainer = this.refs.localMedia;\n    if (!previewContainer.querySelector('video')) {\n      this.attachParticipantTracks(room.localParticipant, previewContainer);\n    }\n    \n    if (!previewContainer.querySelector('video')) {\n        this.attachParticipantTracks(room.localParticipant, previewContainer);\n      }\n  \n      // Attach the Tracks of the room's participants.\n      room.participants.forEach(participant => {\n        console.log(\"Already in Room: '\" + participant.identity + \"'\");\n        var previewContainer = this.refs.remoteMedia;\n        this.attachParticipantTracks(participant, previewContainer);\n      });\n  \n      // Participant joining room\n      room.on('participantConnected', participant => {\n        console.log(\"Joining: '\" + participant.identity + \"'\");\n      });\n  \n      // Attach participant’s tracks to DOM when they add a track\n      room.on('trackAdded', (track, participant) => {\n        console.log(participant.identity + ' added track: ' + track.kind);\n        var previewContainer = this.refs.remoteMedia;\n        this.attachTracks([track], previewContainer);\n      });\n  \n      // Detach participant’s track from DOM when they remove a track.\n      room.on('trackRemoved', (track, participant) => {\n        this.detachTracks([track]);\n      });\n  \n      // Detach all participant’s track when they leave a room.\n      room.on('participantDisconnected', participant => {\n        console.log(\"Participant '\" + participant.identity + \"' left the room\");\n        this.detachParticipantTracks(participant);\n      });\n  \n      // Once the local participant leaves the room, detach the Tracks\n      // of all other participants, including that of the LocalParticipant.\n      room.on('disconnected', () => {\n        if (this.state.previewTracks) {\n          this.state.previewTracks.forEach(track => {\n            track.stop();\n          });\n        }\n        this.detachParticipantTracks(room.localParticipant);\n        room.participants.forEach(this.detachParticipantTracks);\n        \n        // eslint-disable-next-line\n        this.state.activeRoom = null;\n        this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n      });\n  }\n\n  detachTracks = (tracks) => {\n    tracks.forEach(track => {\n      track.detach().forEach(detachedElement => {\n        detachedElement.remove();\n      });\n    });\n  }\n\ndetachParticipantTracks = (participant) => {\n  var tracks = Array.from(participant.tracks.values());\n  this.detachTracks(tracks);\n}\n\n  leaveRoom = () => {\n    this.state.activeRoom.disconnect();\n    this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n }\n\n render() {\n    let showLocalTrack = this.state.localMediaAvailable ? (\n    <div className='wrapper'>\n        <div ref=\"localMedia\" />\n        <div ref=\"remoteMedia\" id=\"remote-media\" />\n\n    </div>) : ''; \n\n    let joinOrLeaveRoomButton = this.state.hasJoinedRoom ? (\n        <Button type='primary' shape=\"round\" size=\"small\" onClick={this.leaveRoom}>Leave Video Chat</Button>) : (\n        <Button type='primary' shape=\"round\" size=\"small\" onClick={this.joinRoom}>Join Video Chat</Button>);\n\n   return (\n        <div className='wrapper'>\n            {joinOrLeaveRoomButton}\n            {showLocalTrack}\n        </div>\n   );\n }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(VideoComponent);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Layout, Button, Avatar, Empty, Popconfirm, Tag, Timeline, Icon } from 'antd';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport CreateRoom from '../CreateRoom/CreateRoom';\nimport RightSection from '../RightSection/RightSection';\nimport JoinRoom from '../JoinRoom/JoinRoom';\nimport PanelGroup from 'react-panelgroup';\nimport Editor from '../Editor/Editor';\nimport { runPythonCode } from '../../actions/runCode';\nimport { setRoomData } from '../../actions/infoAction';\nimport _ from 'lodash';\nimport './Dashboard.scss';\nimport 'react-chat-widget/lib/styles.css';\nimport VideoComponent from '../VideoComponent/VideoComponent';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass Dashboard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            collapsed: false,\n            Inroom: false,\n            createroommodal: false,\n            joinroommodal: false,\n            result: undefined,\n            codeFromFile: undefined,\n            users: [],\n            currentlyTyping: null\n        }\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.userData !== this.props.userData){\n            console.log(this.props.userData)\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n        });\n    }\n\n    setUsers = (users) => {\n        this.setState({\n            users: users\n        })\n    }\n\n    setCurrentlyTyping = (user) => {\n        this.setState({\n            currentlyTyping: user\n        })\n    }\n\n    onCollapse = (collapsed) => {\n        console.log(collapsed);\n        this.setState({ collapsed });\n    }\n\n    createRoomVisible = (visible) => {\n        this.setState({ createroommodal: visible });\n    }\n\n    joinRoomVisible = (visible) => {\n        this.setState({ joinroommodal: visible });\n    }\n\n    \n\n    setInRoom = (value)=> {\n        this.setState({\n            Inroom: value\n        })\n    }\n\n    confirm = (e) => {\n        this.props.onLogoutClick();\n    }\n\n    handleNewUserMessage = (newMessage) => {\n        console.log(`New message incoming! ${newMessage}`);\n        // Now send the message throught the backend API\n        if(newMessage === 'hi' || newMessage === 'hey'){\n            addResponseMessage(\"hello\");\n        }else if(newMessage === 'bye'){\n            addResponseMessage(\"goodbye\");\n        }else{\n            addResponseMessage(\"i dont understand\")\n        }\n      }\n      \n    run = (code, language) => {\n        let value = code;\n        if(language === 'python'){\n            runPythonCode(value).then(result => {\n                this.setState({\n                    result: result.data.result\n                })\n            })\n        }else{\n            this.setState({\n                result: \"language not supported\"\n            })\n        }\n    }\n\n    setCodeFromFile = (code) => {\n        this.setState({\n            codeFromFile: code\n        })\n    }\n    \n    render(){\n        if(_.isEmpty(this.props.userData)){\n            return <div/>\n        }else{\n            return (\n            <div className='dashboard'>\n                <Layout style={{ minHeight: '100vh' }}>\n                    <Sider trigger={null} collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n                    <div className=\"logo\">\n                        <Avatar size='large' src={this.props.userData.photo} />\n                    </div>\n                    <div style={{textAlign: 'center'}}>\n                        {this.state.Inroom && (\n                            <Tag> {this.props.roomData.roomName}</Tag>\n                        )}\n                        <div className='users'>\n                          <Timeline>\n                            {this.state.users.map(user => (\n                                // <Timeline.Item dot={this.state.currentlyTyping === user && <Icon type=\"ellipsis\"/>} key={user}>{user.split('-')[0]}</Timeline.Item>\n                                <Timeline.Item color={this.state.currentlyTyping === user ? \"green\" : \"blue\"} key={user}>{user.split('-')[0]}</Timeline.Item>\n                            ))}\n                        </Timeline>\n                        </div>\n                    </div>\n                    <Popconfirm title=\"Are you sure you want to log out?\" placement='right' onConfirm={this.confirm} okText=\"Yes\" cancelText=\"No\">\n                        <Button type=\"primary\" style={{ width: '50%', position: 'absolute', bottom: '50px', left: '25%' }}>log out</Button>                 \n                    </Popconfirm>\n                    </Sider>\n                    <Layout>\n                        <Header style={{ background: '#fff', padding: 0}}>                 \n                            {this.state.Inroom && <VideoComponent/>}              \n                        </Header>\n                        <Content style={{ margin: '0 16px' }}>\n                            {this.state.Inroom ?\n                                <PanelGroup style={{ background: '#fff', minHeight: '100%' }}>\n                                    <Editor run={this.run} codeFromFile={this.state.codeFromFile} users={this.state.users} setUsers={this.setUsers} currentlyTyping={this.state.currentlyTyping} setCurrentlyTyping={this.setCurrentlyTyping}/>\n                                    {this.state.result ? <RightSection result={this.state.result}/> : <div />}\n                                </PanelGroup>\n                                :\n                                <div className='croom'>\n                                      <Empty \n                                        description={\n                                            <span>\n                                                no workspace :(\n                                            </span>\n                                        }\n                                        style={{marginBottom: '10px'}}\n                                    >\n                                    </Empty>\n                                    <div>\n                                        <Button type='primary' onClick={() => this.createRoomVisible(true)}>Create Room</Button> \n                                        {\" \"} / {\" \"}\n                                        <Button type='primary' onClick={() => this.joinRoomVisible(true)}>Join Room</Button>\n                                    </div>\n                                </div>\n                            }\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>\n                            akin develops ©2019 Created by Akin Shonibare\n                        </Footer>\n                    </Layout>\n                </Layout>\n                <Widget handleNewUserMessage={this.handleNewUserMessage} title='chat room' subtitle=''/>\n                <CreateRoom modalVisible={this.state.createroommodal} setModalVisible={this.createRoomVisible} setInRoom={this.setInRoom} setCodeFromFile={this.setCodeFromFile}/>                \n                <JoinRoom modalVisible={this.state.joinroommodal} setModalVisible={this.joinRoomVisible} setInRoom={this.setInRoom}/>\n            </div>\n            )\n        }\n    }\n}\n//screencast, video, message, audio\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(Dashboard);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter, Switch, Route } from \"react-router-dom\";\nimport { firebaseAuth, GITHUB_AUTH_PROVIDER } from \"./utils/firebase\";\nimport LandingPage from './components/LandingPage/LandingPage';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport { setUserData } from './actions/infoAction';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          authLoading: true\n        }\n    }\n\n    componentDidMount() {\n      this.authObserver = firebaseAuth.onAuthStateChanged(user => {\n        if(user){\n          let visitor = {};\n          visitor['name'] = user.providerData[0]['displayName'];\n          visitor['email'] = user.providerData[0]['email'];\n          visitor['id'] = user.providerData[0]['uid'];\n          visitor['photo'] = user.providerData[0]['photoURL'];\n          this.props.setUserData(visitor)\n        }\n\n          user\n            ? this.props.history.push('/')\n            : this.props.history.push('/login');\n          this.setState({ authLoading: false });\n        });\n    }\n\n    onLoginClick = async () => {\n      this.setState({ authLoading: true });\n      try {\n        await firebaseAuth.signInWithPopup(GITHUB_AUTH_PROVIDER);\n      } catch (e) {\n        console.error(e.message || \"error authenticating user.\");\n        this.setState({ authLoading: false });\n      }\n    };\n\n\n    onLogoutClick = async () => {\n      try {\n          await firebaseAuth.signOut();\n      } catch (e) {\n          console.error(e.message || \"error signing user out.\");\n      }\n    };\n    \n    componentWillUnmount() {\n      this.authObserver();\n    }\n\n    render(){\n        const { authLoading } = this.state;\n\n        return(\n          <Switch>\n            <Route\n              exact path=\"/\"\n              render={(props) => <Dashboard onLogoutClick={this.onLogoutClick} {...props}/>}\n            />\n            <Route\n              exact path=\"/login\"\n              render={(props) => <LandingPage loading={authLoading} onLoginClick={this.onLoginClick} {...props}/>}\n            />\n          </Switch>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageData,\n        teamData: state.pageData\n\t};\n}\n\nconst actions = {\n\tsetUserData\n};\n\nexport default withRouter(connect(\n\tmapStateToProps,\n\tactions\n)(App));","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nimport {isMobile} from 'react-device-detect';\nimport { Tag } from 'antd';\nimport App from \"./App\";\n\nconst routes = (\n  <CookiesProvider>\n    <Router>\n      {isMobile ? <div style={{ width: '100%', height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center'}}><Tag color=\"red\">code pair unavailable on mobile, open on laptop/desktop</Tag></div> : <App />}\n    </Router>\n  </CookiesProvider>\n);\n\nexport default routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport store from './store';\nimport routes from './routes'\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\n\nconst App = <Provider store={store}>{routes}</Provider>;\n\n\nReactDOM.render(App, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}