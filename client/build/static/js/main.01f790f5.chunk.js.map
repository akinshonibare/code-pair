{"version":3,"sources":["actions/infoAction.js","reducers/infoReducer.js","reducers/index.js","store.js","utils/firebase/index.js","components/LandingPage/LandingPage.js","actions/snippetsAction.js","components/CreateRoom/CreateRoom.js","components/JoinRoom/JoinRoom.js","components/Editor/Editor.js","components/VideoComponent/VideoComponent.js","components/Dashboard/Dashboard.js","App.js","routes.js","serviceWorker.js","index.js"],"names":["SET_ROOM_DATA","SET_USER_DATA","setRoomData","data","type","payload","initialState","userData","roomData","combineReducers","pageInfo","state","arguments","length","undefined","action","user","Object","objectSpread","room","middleware","thunk","applyMiddleware","apply","toConsumableArray","store","createStore","reducers","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebaseAuth","auth","GITHUB_AUTH_PROVIDER","GithubAuthProvider","LandingPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","axios","get","then","res","setState","result","react_default","a","createElement","className","es_button","style","width","onClick","onLoginClick","Component","InputGroup","input","Group","Option","es_select","CreateRoom","setLanguage","value","language","setRoom","roomName","setModalVisible","setInRoom","randomstring","generate","charset","modal","title","visible","modalVisible","onOk","onCancel","addonBefore","defaultValue","disabled","compact","onChange","map","item","i","key","actions","connect","JoinRoom","e","target","getRoom","socket","io","Editor","context","newValue","code","console","log","emit","setTheme","newTheme","theme","updateCodeFromSockets","updateUsersAndCodeInState","sendUsersAndCode","users","on","_this$state","Editor_InputGroup","Editor_Option","runCode","react_ace_lib_default","mode","name","editorProps","$blockScrolling","setOptions","showLineNumbers","tabSize","showPrintMargin","VideoComponent","joinRoom","trim","connectOptions","previewTracks","tracks","Video","token","roomJoined","error","message","roomNameErr","identity","activeRoom","localMediaAvailable","hasJoinedRoom","previewContainer","refs","localMedia","querySelector","attachParticipantTracks","localParticipant","participants","forEach","participant","remoteMedia","track","kind","attachTracks","detachTracks","detachParticipantTracks","stop","detach","detachedElement","remove","Array","from","values","leaveRoom","disconnect","post","concat","id","results","_results$data","container","appendChild","attach","showLocalTrack","ref","joinOrLeaveRoomButton","shape","size","Header","Footer","Sider","Content","Dashboard","toggle","collapsed","onCollapse","createRoomVisible","createroommodal","joinRoomVisible","joinroommodal","Inroom","confirm","onLogoutClick","handleNewUserMessage","newMessage","addResponseMessage","prevProps","prevState","_","isEmpty","layout","minHeight","trigger","collapsible","avatar","src","photo","popconfirm","placement","onConfirm","okText","cancelText","position","bottom","left","background","padding","components_VideoComponent_VideoComponent","margin","PanelGroup","components_Editor_Editor","empty","description","marginBottom","textAlign","lib","subtitle","components_CreateRoom_CreateRoom","components_JoinRoom_JoinRoom","App","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","authLoading","signInWithPopup","t0","_callee2","_context2","signOut","authObserver","onAuthStateChanged","visitor","providerData","setUserData","history","push","_this3","Switch","Route","exact","path","render","components_Dashboard_Dashboard","assign","components_LandingPage_LandingPage","loading","withRouter","pageData","teamData","routes","es6","BrowserRouter","src_App","Boolean","window","location","hostname","match","react_redux_es","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01f790f5.chunk.js","sourcesContent":["export const SET_ROOM_DATA = \"SET_ROOM_DATA\";\nexport const SET_USER_DATA = \"SET_USER_DATA\";\n\nexport function setRoomData(data) {\n  return { type: SET_ROOM_DATA, payload: data };\n}\n\nexport function setUserData(data) {\n  return { type: SET_USER_DATA, payload: data };\n}","import { SET_ROOM_DATA, SET_USER_DATA } from \"../actions/infoAction\";\n\nconst initialState = {\n  userData: {},\n  roomData: {}\n};\n\nexport function infoReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case SET_USER_DATA:\n      var user = action.payload;\n      return { ...state, userData: user };\n\n    case SET_ROOM_DATA:\n      var room = action.payload;\n      return { ...state, roomData: room };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { infoReducer } from \"./infoReducer\";\n\nexport default combineReducers({\n  pageInfo: infoReducer\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\nlet middleware = [thunk];\nif (process.env.NODE_ENV !== \"production\") {\n\tmiddleware = [...middleware, logger];\n}\n\nmiddleware = applyMiddleware(...middleware);\n\nconst store = createStore(reducers, middleware);\n\nexport default store;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst FIREBASE_CONFIG = {\n    apiKey: \"AIzaSyDUMCwUCgkZCf4Dec5QQByW2pk3qdTTnmk\",\n    authDomain: \"code-pair-ec2c8.firebaseapp.com\",\n    databaseURL: \"https://code-pair-ec2c8.firebaseio.com\",\n    projectId: \"code-pair-ec2c8\",\n    storageBucket: \"code-pair-ec2c8.appspot.com\",\n    messagingSenderId: \"930776554345\"\n};\nfirebase.initializeApp(FIREBASE_CONFIG);\n\nexport const firebaseAuth = firebase.auth();\nexport const GITHUB_AUTH_PROVIDER = new firebase.auth.GithubAuthProvider();","import React, { Component } from 'react';\nimport {Button} from 'antd';\nimport './LandingPage.scss';\n// import FactCard from '../FactCard/FactCard';\nimport {getsnippets} from '../../actions/snippetsAction';\n\nclass LandingPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: undefined,\n        }\n    }\n\n    componentDidMount() {\n        getsnippets().then(res => {\n            this.setState({\n                data: res.data.result\n            })\n        })\n    }\n\n    render(){\n        if(!this.state.data){\n            return <div/>\n        }else{\n        return(\n            <div className='landingpage-wrapper'>  \n                {/* <FactCard snippet={this.state.data}/> */}\n                <Button style={{ width: 620 }} onClick={this.props.onLoginClick}>Enter</Button>\n            </div>\n        );\n        }\n    }\n}\n\nexport default LandingPage;","import axios from 'axios';\n\nconst getsnippets = (code) => {\n    return axios.get('/api/snippets')\n}\n\n export { getsnippets }","import React, { Component } from 'react';\nimport { Modal, Input, Select} from 'antd';\nimport { connect } from \"react-redux\";\nimport randomstring from \"randomstring\";\nimport { setRoomData } from '../../actions/infoAction';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\nclass CreateRoom extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            language: 'python',\n            room: randomstring.generate({length: 12,charset: 'alphabetic'})\n       }\n    }\n\n    setLanguage = (value) => {\n        this.setState({\n            language: value\n        })\n    }\n\n\n    setRoom = () => {\n        let room = {\n            language: this.state.language,\n            roomName: this.state.room\n        }\n        \n        this.props.setRoomData(room)\n        this.props.setModalVisible(false)\n        this.props.setInRoom(true)\n    }\n\n    render(){\n        const LANGUAGES = ['python', 'javascript']\n        return(\n            <Modal\n            title=\"Create Room\"\n            visible={this.props.modalVisible}\n            onOk={() => this.setRoom()}\n            onCancel={() => this.props.setModalVisible(false)}\n          >\n            <Input addonBefore=\"room\" style={{ width: '100%' }} defaultValue={this.state.room} disabled/> \n            <br/>\n            <br/>\n            <InputGroup compact>\n                <Select style={{ width: '50%' }} defaultValue={this.state.language} onChange={this.setLanguage}>\n                    {LANGUAGES.map((item, i) => <Option key={i} value={item}>{item}</Option>)}\n                </Select>        \n            </InputGroup>\n          </Modal>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(CreateRoom);\n","import React, { Component } from 'react';\nimport { Modal, Input} from 'antd';\nimport { connect } from \"react-redux\";\nimport { setRoomData } from '../../actions/infoAction';\n\n\nclass JoinRoom extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            room: ''\n       }\n    }\n\n    setRoom = (e) => {\n        this.setState({\n            room: e.target.value\n        });\n    }\n\n    getRoom = () => {\n        let room = {\n            roomName: this.state.room\n        }\n        this.props.setRoomData(room)\n        this.props.setModalVisible(false)\n        this.props.setInRoom(true)\n    }\n\n    render(){\n        return(\n            <Modal\n            title=\"Join Room\"\n            visible={this.props.modalVisible}\n            onOk={() => this.getRoom()}\n            onCancel={() => this.props.setModalVisible(false)}\n          >\n            <Input addonBefore=\"room\" style={{ width: '100%' }} value={this.state.room} onChange={this.setRoom}/>       \n\n          </Modal>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(JoinRoom);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\n\n// Import Brace and the AceEditor Component\n// eslint-disable-next-line\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\nimport { Input, Select, Button} from 'antd';\n\nimport io from 'socket.io-client';\n\n// Import a Mode (language)\nimport 'brace/mode/javascript';\nimport 'brace/mode/python';\n\n// Import a Theme (okadia, github, xcode etc)\nimport 'brace/theme/solarized_dark';\nimport 'brace/theme/github';\nimport 'brace/theme/tomorrow';\nimport 'brace/theme/monokai';\n\nimport './Editor.scss';\n\nconst Option = Select.Option;\nconst InputGroup = Input.Group;\n\nconst socket = io(\"http://localhost:5001\")\n\nclass Editor extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state ={\n            language: 'javascript',\n            theme: 'tomorrow',\n            code: '',\n            room: '',\n            users: []\n        }\n\n        socket.on('receive code', (payload) => this.updateCodeFromSockets(payload.code));\n        socket.on('load users and code', () => this.sendUsersAndCode())\n        socket.on('receive users and code', (payload) => this.updateUsersAndCodeInState(payload))\n    }\n\n    onChange = (newValue) =>  {\n        this.setState({\n            code: newValue\n        }, () => console.log(this.state.code))\n        socket.emit('coding event', {code: newValue, room: this.state.room})\n    }\n\n    setTheme = (newTheme) => {\n        this.setState({\n            theme: newTheme\n        })\n    }\n\n    componentDidMount() {\n        this.setState({\n            room: this.props.roomData.roomName,\n            language: this.props.roomData.language\n        }, () => socket.emit('room', {room: this.state.room}))  \n    }\n\n    componentWillUnmount() {\n        socket.emit('leave room', {room: this.state.room})\n    }\n    \n\n    updateCodeFromSockets = (code) => {\n        this.setState({\n            code: code\n        });\n    }\n\n    updateUsersAndCodeInState = (payload) => {\n        this.setState({\n            code: payload.code,\n            language: payload.language\n        });\n    }\n\n    sendUsersAndCode = () =>  {\n        socket.emit('send users and code', {room:this.state.room, code: this.state.code, language: this.state.language})\n    }\n    \n\n    render() {\n        const { language, theme, code } = this.state;\n        const THEMES =['tomorrow', 'solarized_dark', 'monokai', 'github'];\n\n\n        return (\n            <div className='editor'>\n                <div className = 'option'>\n                    <InputGroup compact>\n                        <Input style={{ width: '75px' }} defaultValue=\"theme\" disabled/>\n                        <Select style={{ width: '125px' }} defaultValue={this.state.theme} onChange={this.setTheme}>\n                            {THEMES.map(item => (<Option key={item} value={item}>{item}</Option>))}\n                        </Select>  \n                    </InputGroup>\n\n                    <Button onClick={this.runCode}>run</Button>\n                </div>\n                <AceEditor\n                mode={language}\n                theme={theme}\n                name=\"myeditor\"\n                onChange={this.onChange}\n                value={code}\n                editorProps={{ $blockScrolling: true }}\n                setOptions={{\n                showLineNumbers: true,\n                tabSize: 2,\n                showPrintMargin: false\n                }}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(Editor);","import React, { Component } from 'react';\nimport { Button } from 'antd';\nimport { connect } from \"react-redux\";\nimport { setRoomData } from '../../actions/infoAction';\nimport Video from 'twilio-video';\nimport axios from 'axios';\nimport './VideoComponent.scss';\n\nclass VideoComponent extends Component {\n constructor(props) {\n   super();\n\n   this.state = {\n    identity: null,  /* Will hold the fake name assigned to the client. The name is generated by faker on the server */\n    roomName: '',    /* Will store the room name */\n    roomNameErr: false,  /* Track error for room name TextField. This will    enable us to show an error message when this variable is true */\n    previewTracks: null,\n    localMediaAvailable: false, /* Represents the availability of a LocalAudioTrack(microphone) and a LocalVideoTrack(camera) */\n    hasJoinedRoom: false,\n    activeRoom: null // Track the current active room\n    };\n }\n\n componentDidMount() {\n    axios.post('/api/twilio/token', {user: `${this.props.userData.name}-${this.props.userData.id}`}).then(results => {\n      const { identity, token } = results.data;\n      this.setState({ identity, token });\n    });\n    this.setState({\n        roomName: this.props.roomData.roomName\n    })\n    console.log(this.state.roomName)\n }\n\n joinRoom = () => {\n    if (!this.state.roomName.trim()) {\n        this.setState({ roomNameErr: true });\n        return;\n    }\n\n    console.log(\"Joining room '\" + this.state.roomName + \"'...\");\n    let connectOptions = {\n        name: this.state.roomName\n    };\n\n    if (this.state.previewTracks) {\n        connectOptions.tracks = this.state.previewTracks;\n    }\n\n    Video.connect(this.state.token, connectOptions).then(this.roomJoined, error => {\n    console.log('Could not connect to Twilio: ' + error.message);\n    });\n }\n\n // Attach the Tracks to the DOM.\nattachTracks(tracks, container) {\n    tracks.forEach(track => {\n      container.appendChild(track.attach());\n    });\n  }\n  \n  // Attach the Participant's Tracks to the DOM.\n  attachParticipantTracks(participant, container) {\n    var tracks = Array.from(participant.tracks.values());\n    this.attachTracks(tracks, container);\n  }\n  \n  roomJoined = (room) => {\n    // Called when a participant joins a room\n    console.log(\"Joined as '\" + this.state.identity + \"'\");\n    this.setState({\n      activeRoom: room,\n      localMediaAvailable: true,\n      hasJoinedRoom: true  // Removes ‘Join Room’ button and shows ‘Leave Room’\n    });\n  \n    // Attach LocalParticipant's tracks to the DOM, if not already attached.\n    var previewContainer = this.refs.localMedia;\n    if (!previewContainer.querySelector('video')) {\n      this.attachParticipantTracks(room.localParticipant, previewContainer);\n    }\n    \n    if (!previewContainer.querySelector('video')) {\n        this.attachParticipantTracks(room.localParticipant, previewContainer);\n      }\n  \n      // Attach the Tracks of the room's participants.\n      room.participants.forEach(participant => {\n        console.log(\"Already in Room: '\" + participant.identity + \"'\");\n        var previewContainer = this.refs.remoteMedia;\n        this.attachParticipantTracks(participant, previewContainer);\n      });\n  \n      // Participant joining room\n      room.on('participantConnected', participant => {\n        console.log(\"Joining: '\" + participant.identity + \"'\");\n      });\n  \n      // Attach participant’s tracks to DOM when they add a track\n      room.on('trackAdded', (track, participant) => {\n        console.log(participant.identity + ' added track: ' + track.kind);\n        var previewContainer = this.refs.remoteMedia;\n        this.attachTracks([track], previewContainer);\n      });\n  \n      // Detach participant’s track from DOM when they remove a track.\n      room.on('trackRemoved', (track, participant) => {\n        this.detachTracks([track]);\n      });\n  \n      // Detach all participant’s track when they leave a room.\n      room.on('participantDisconnected', participant => {\n        console.log(\"Participant '\" + participant.identity + \"' left the room\");\n        this.detachParticipantTracks(participant);\n      });\n  \n      // Once the local participant leaves the room, detach the Tracks\n      // of all other participants, including that of the LocalParticipant.\n      room.on('disconnected', () => {\n        if (this.state.previewTracks) {\n          this.state.previewTracks.forEach(track => {\n            track.stop();\n          });\n        }\n        this.detachParticipantTracks(room.localParticipant);\n        room.participants.forEach(this.detachParticipantTracks);\n        \n        // eslint-disable-next-line\n        this.state.activeRoom = null;\n        this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n      });\n  }\n\n  detachTracks = (tracks) => {\n    tracks.forEach(track => {\n      track.detach().forEach(detachedElement => {\n        detachedElement.remove();\n      });\n    });\n  }\n\ndetachParticipantTracks = (participant) => {\n  var tracks = Array.from(participant.tracks.values());\n  this.detachTracks(tracks);\n}\n\n  leaveRoom = () => {\n    this.state.activeRoom.disconnect();\n    this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n }\n\n render() {\n    let showLocalTrack = this.state.localMediaAvailable ? (\n    <div className='wrapper'>\n        <div ref=\"localMedia\" />\n        <div ref=\"remoteMedia\" id=\"remote-media\" />\n\n    </div>) : ''; \n\n    let joinOrLeaveRoomButton = this.state.hasJoinedRoom ? (\n        <Button type='primary' shape=\"round\" size=\"small\" onClick={this.leaveRoom}>Leave Video Chat</Button>) : (\n        <Button type='primary' shape=\"round\" size=\"small\" onClick={this.joinRoom}>Join Video Chat</Button>);\n\n   return (\n        <div className='wrapper'>\n            {joinOrLeaveRoomButton}\n            {showLocalTrack}\n        </div>\n   );\n }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(VideoComponent);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Layout, Button, Avatar, Empty, Popconfirm } from 'antd';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport CreateRoom from '../CreateRoom/CreateRoom';\nimport JoinRoom from '../JoinRoom/JoinRoom';\nimport PanelGroup from 'react-panelgroup';\nimport Editor from '../Editor/Editor';\nimport { setRoomData } from '../../actions/infoAction';\nimport _ from 'lodash';\nimport './Dashboard.scss';\nimport 'react-chat-widget/lib/styles.css';\nimport VideoComponent from '../VideoComponent/VideoComponent';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass Dashboard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            collapsed: false,\n            Inroom: false,\n            createroommodal: false,\n            joinroommodal: false\n        }\n    }\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.userData !== this.props.userData){\n            console.log(this.props.userData)\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n        });\n    }\n\n    onCollapse = (collapsed) => {\n        console.log(collapsed);\n        this.setState({ collapsed });\n    }\n\n    createRoomVisible = (visible) => {\n        this.setState({ createroommodal: visible });\n    }\n\n    joinRoomVisible = (visible) => {\n        this.setState({ joinroommodal: visible });\n    }\n\n    \n\n    setInRoom = (value)=> {\n        this.setState({\n            Inroom: value\n        })\n    }\n\n    confirm = (e) => {\n        this.props.onLogoutClick();\n    }\n\n    handleNewUserMessage = (newMessage) => {\n        console.log(`New message incoming! ${newMessage}`);\n        // Now send the message throught the backend API\n        if(newMessage === 'hi' || newMessage === 'hey'){\n            addResponseMessage(\"hello\");\n        }else if(newMessage === 'bye'){\n            addResponseMessage(\"goodbye\");\n        }else{\n            addResponseMessage(\"i dont understand\")\n        }\n      }\n      \n    \n    render(){\n        if(_.isEmpty(this.props.userData)){\n            return <div/>\n        }else{\n            return (\n            <div className='dashboard'>\n                <Layout style={{ minHeight: '100vh' }}>\n                    <Sider trigger={null} collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n                    <div className=\"logo\">\n                        <Avatar size='large' src={this.props.userData.photo} />\n                    </div>\n                    <div>\n                        {this.state.Inroom && (\n                            <h3>ROOM {this.props.roomData.roomName}</h3>\n                        )}\n                    </div>\n                    <Popconfirm title=\"Are you sure you want to log out?\" placement='right' onConfirm={this.confirm} okText=\"Yes\" cancelText=\"No\">\n                        <Button type=\"primary\" style={{ width: '50%', position: 'absolute', bottom: '50px', left: '25%' }}>log out</Button>                 \n                    </Popconfirm>\n                    </Sider>\n                    <Layout>\n                        <Header style={{ background: '#fff', padding: 0}}>                 \n                            {this.state.Inroom && <VideoComponent/>}              \n                        </Header>\n                        <Content style={{ margin: '0 16px' }}>\n                            {this.state.Inroom ?\n                                <PanelGroup style={{ background: '#fff', minHeight: '100%' }}>\n                                    <Editor />\n                                    {/* <VideoComponent/> */}\n                                    <div />\n                                </PanelGroup>\n                                :\n                                <div className='croom'>\n                                      <Empty \n                                        description={\n                                            <span>\n                                                no workspace :(\n                                            </span>\n                                        }\n                                        style={{marginBottom: '10px'}}\n                                    >\n                                    </Empty>\n                                    <div>\n                                        <Button type='primary' onClick={() => this.createRoomVisible(true)}>Create Room</Button> \n                                        {\" \"} / {\" \"}\n                                        <Button type='primary' onClick={() => this.joinRoomVisible(true)}>Join Room</Button>\n                                    </div>\n                                </div>\n                            }\n                        </Content>\n                        <Footer style={{ textAlign: 'center' }}>\n                            akin develops ©2019 Created by Akin Shonibare\n                        </Footer>\n                    </Layout>\n                </Layout>\n                <Widget handleNewUserMessage={this.handleNewUserMessage} title='chat room' subtitle=''/>\n                <CreateRoom modalVisible={this.state.createroommodal} setModalVisible={this.createRoomVisible} setInRoom={this.setInRoom}/>                \n                <JoinRoom modalVisible={this.state.joinroommodal} setModalVisible={this.joinRoomVisible} setInRoom={this.setInRoom}/>\n            </div>\n            )\n        }\n    }\n}\n//screencast, video, message, audio\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageInfo.userData,\n        roomData: state.pageInfo.roomData\n\t};\n}\n\nconst actions = {\n\tsetRoomData\n};\n\nexport default connect(\n\tmapStateToProps,\n\tactions\n)(Dashboard);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter, Switch, Route } from \"react-router-dom\";\nimport { firebaseAuth, GITHUB_AUTH_PROVIDER } from \"./utils/firebase\";\nimport LandingPage from './components/LandingPage/LandingPage';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport { setUserData } from './actions/infoAction';\n\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          authLoading: true\n        }\n    }\n\n    componentDidMount() {\n      this.authObserver = firebaseAuth.onAuthStateChanged(user => {\n        if(user){\n          let visitor = {};\n          visitor['name'] = user.providerData[0]['displayName'];\n          visitor['email'] = user.providerData[0]['email'];\n          visitor['id'] = user.providerData[0]['uid'];\n          visitor['photo'] = user.providerData[0]['photoURL'];\n          this.props.setUserData(visitor)\n        }\n\n          user\n            ? this.props.history.push('/')\n            : this.props.history.push('/login');\n          this.setState({ authLoading: false });\n        });\n    }\n\n    onLoginClick = async () => {\n      this.setState({ authLoading: true });\n      try {\n        await firebaseAuth.signInWithPopup(GITHUB_AUTH_PROVIDER);\n      } catch (e) {\n        console.error(e.message || \"error authenticating user.\");\n        this.setState({ authLoading: false });\n      }\n    };\n\n\n    onLogoutClick = async () => {\n      try {\n          await firebaseAuth.signOut();\n      } catch (e) {\n          console.error(e.message || \"error signing user out.\");\n      }\n    };\n    \n    componentWillUnmount() {\n      this.authObserver();\n    }\n\n    render(){\n        const { authLoading } = this.state;\n\n        return(\n          <Switch>\n            <Route\n              exact path=\"/\"\n              render={(props) => <Dashboard onLogoutClick={this.onLogoutClick} {...props}/>}\n            />\n            <Route\n              exact path=\"/login\"\n              render={(props) => <LandingPage loading={authLoading} onLoginClick={this.onLoginClick} {...props}/>}\n            />\n          </Switch>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n        userData: state.pageData,\n        teamData: state.pageData\n\t};\n}\n\nconst actions = {\n\tsetUserData\n};\n\nexport default withRouter(connect(\n\tmapStateToProps,\n\tactions\n)(App));","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CookiesProvider } from \"react-cookie\";\nimport App from \"./App\";\n\nconst routes = (\n  <CookiesProvider>\n    <Router>\n      <App />\n    </Router>\n  </CookiesProvider>\n);\n\nexport default routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport store from './store';\nimport routes from './routes'\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\n\nconst App = <Provider store={store}>{routes}</Provider>;\n\n\nReactDOM.render(App, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}